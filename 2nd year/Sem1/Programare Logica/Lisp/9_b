(defun addList (l1)
 (cond
  ((null l1) nil)
  (t (cons(car l1) (addList(cdr l1))))
 )
)

(defun replaceElem (l l1 e)
  (cond
   ((null l) nil)
   ((listp(car l))  (cons(replaceElem (car l) l1 e)(replaceElem (cdr l) l1 e)) )
   ((equal(car l)e) (cons(addList l1) (replaceElem (cdr l) l1 e)))
   (t               (cons(car l)(replaceElem (cdr l) l1 e)))
  )
)
