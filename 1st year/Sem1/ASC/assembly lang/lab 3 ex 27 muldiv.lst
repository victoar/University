     1                                  
     2                                  bits 32 ;assembling for the 32 bits architecture
     3                                  ; the start label will be the entry point in the program
     4                                  global  start 
     5                                  
     6                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     7                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  segment  data use32 class=data ; the data segment where the variables are declared 
    10                                      
    11 00000000 1E                          a db 30;
    12 00000001 EC                          b db -20;
    13 00000002 0A00                        c dw 10;
    14 00000004 D8FFFFFF                    e dd -40;
    15 00000008 1900000000000000            x dq 25;
    16                                      
    17                                      
    18                                  segment  code use32 class=code ; code segment
    19                                  start: 
    20                                  
    21                                      ; (100+a+b*c)/(a-100)+e+x/a
    22                                      
    23                                      ; (100+a+b*c)
    24 00000000 A0[01000000]                mov AL, [b];
    25 00000005 6698                        CBW;
    26 00000007 66F725[02000000]            mul word [c];
    27 0000000E 8A1D[00000000]              mov BL, [a];
    28 00000014 80C364                      add BL, 100;
    29 00000017 B700                        mov BH, 0;
    30 00000019 6601D8                      add AX,BX;
    31                                      
    32                                      ; (a-100)
    33 0000001C 8A1D[00000000]              mov BL, [a];
    34 00000022 80EB64                      sub BL, 100;
    35                                      
    36                                      ; (100+a+b*c)/(a-100)
    37 00000025 F6FB                        idiv BL;
    38                                      
    39                                      ; (100+a+b*c)/(a-100) + e
    40 00000027 6699                        CWD;
    41 00000029 660305[04000000]            add AX, word [e]
    42 00000030 661315[06000000]            adc DX, word [e+2]
    43 00000037 6689C3                      mov BX, AX;
    44 0000003A 6689D1                      mov CX, DX;
    45                                      
    46                                      ; x/a
    47 0000003D A1[08000000]                mov EAX, dword [x]
    48 00000042 8B15[0C000000]              mov EDX, dword [x+4]
    49 00000048 F63D[00000000]              idiv byte [a];
    50                                      
    51                                      ; (100+a+b*c)/(a-100)+e+x/a
    52 0000004E 6601D8                      add AX, BX;
    53 00000051 6611CA                      adc DX, CX;
    54                                      
    55                                      
    56 00000054 6A00                         push dword 0 ;saves on stack the parameter of the function exit
    57 00000056 FF15[00000000]               call [exit] ;function exit is called in order to end the execution ofthe program	
    58                                       
    59                                       
