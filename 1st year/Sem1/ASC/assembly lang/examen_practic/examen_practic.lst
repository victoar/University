     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, fread, scanf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fread msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18                                  
    19 00000000 00000000                    L dd 0
    20 00000004 00000000                    nr_cuvant dd 0
    21 00000008 00000000                    nr_cuvinte dd 0
    22 0000000C 257500                      format_number db "%u", 0
    23 0000000F 546865726520617265-         print_format db "There are %u words with ", 0
    23 00000018 20257520776F726473-
    23 00000021 20776974682000     
    24 00000028 746865206C656E6774-         print_format2 db "the length of %u .", 0
    24 00000031 68206F66202575202E-
    24 0000003A 00                 
    25 0000003B 25732000                    print_format3 db "%s ", 0
    26 0000003F 637576696E74652E74-         file_name db "cuvinte.txt", 0
    26 00000048 787400             
    27 0000004B 7200                        access_mode db "r", 0
    28 0000004D FFFFFFFF                    file_descrpitor dd -1
    29                                      
    30 00000051 257300                      format_string db "%s", 0
    31 00000054 00<rept>                    cuvinte times 100 db 0
    32 000000B8 00<rept>                    cuvant times 50 db 0
    33                                      
    34                                  ; our code starts here
    35                                  segment code use32 class=code
    36                                      start:
    37                                          ; ...
    38                                      
    39 00000000 68[4B000000]                    push access_mode
    40 00000005 68[3F000000]                    push file_name
    41 0000000A FF15[00000000]                  call [fopen]
    42 00000010 83C408                          add esp, 4*2
    43                                          
    44 00000013 83F800                          cmp eax, 0
    45 00000016 0F84E7000000                    je file_not_open
    46 0000001C A3[4D000000]                    mov [file_descrpitor], eax
    47                                          
    48 00000021 FF35[4D000000]                  push dword [file_descrpitor]
    49 00000027 6A64                            push 100
    50 00000029 6A01                            push 1
    51 0000002B 68[54000000]                    push cuvinte
    52 00000030 FF15[00000000]                  call [fread]
    53 00000036 83C410                          add esp, 4*4
    54                                          
    55 00000039 68[00000000]                    push dword L
    56 0000003E 68[0C000000]                    push dword format_number
    57 00000043 FF15[00000000]                  call [scanf]
    58 00000049 83C408                          add esp, 4*2
    59                                          
    60                                          
    61 0000004C BE[54000000]                    mov esi, cuvinte
    62 00000051 BF[B8000000]                    mov edi, cuvant
    63 00000056 FC                              cld
    64                                          parse:
    65 00000057 AC                                  lodsb
    66                                              ;inc [nr_cuvnt]
    67 00000058 3C00                                cmp al, 0
    68 0000005A 7447                                je stop
    69 0000005C 3C20                                cmp al, ' '
    70 0000005E 7409                                je new_word
    71 00000060 FF05[04000000]                      inc dword [nr_cuvant]
    72 00000066 AA                                  stosb
    73 00000067 EB38                                jmp next
    74                                              
    75                                              new_word:
    76 00000069 A1[00000000]                            mov eax, dword [L]
    77 0000006E 3B05[04000000]                          cmp eax, dword [nr_cuvant]
    78 00000074 751C                                    jne not_equal
    79 00000076 FF05[08000000]                              inc dword [nr_cuvinte]
    80 0000007C B000                                        mov al, 0
    81 0000007E AA                                          stosb
    82 0000007F 68[B8000000]                                push dword cuvant
    83 00000084 68[3B000000]                                push dword print_format3
    84 00000089 FF15[00000000]                              call [printf]
    85 0000008F 83C408                                      add esp, 4*2
    86                                              not_equal:
    87 00000092 C705[04000000]0000-                 mov dword [nr_cuvant], 0
    87 0000009A 0000               
    88 0000009C BF[B8000000]                        mov edi, cuvant
    89                                              
    90                                              next:
    91                                          
    92 000000A1 EBB4                            jmp parse
    93                                          
    94                                          stop:
    95                                          
    96 000000A3 A1[00000000]                    mov eax, dword [L]
    97 000000A8 3B05[04000000]                  cmp eax, dword [nr_cuvant]
    98 000000AE 751C                                jne not_equal2
    99 000000B0 FF05[08000000]                          inc dword [nr_cuvinte]
   100 000000B6 B000                                    mov al, 0
   101 000000B8 AA                                      stosb
   102 000000B9 68[B8000000]                            push dword cuvant
   103 000000BE 68[3B000000]                            push dword print_format3
   104 000000C3 FF15[00000000]                          call [printf]
   105 000000C9 83C408                                  add esp, 4*2
   106                                          not_equal2:
   107                                          
   108 000000CC FF35[08000000]                  push dword [nr_cuvinte]
   109 000000D2 68[0F000000]                    push dword print_format
   110 000000D7 FF15[00000000]                  call [printf]
   111 000000DD 83C408                          add esp, 4*2
   112                                          
   113 000000E0 FF35[00000000]                  push dword [L]
   114 000000E6 68[28000000]                    push dword print_format2
   115 000000EB FF15[00000000]                  call [printf]
   116 000000F1 83C408                          add esp, 4*2
   117                                          
   118 000000F4 FF35[4D000000]                  push dword [file_descrpitor]
   119 000000FA FF15[00000000]                  call [fclose]
   120 00000100 83C404                          add esp, 4
   121                                          
   122                                          
   123                                          file_not_open:
   124                                      
   125                                      
   126                                          ; exit(0)
   127 00000103 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   128 00000105 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
