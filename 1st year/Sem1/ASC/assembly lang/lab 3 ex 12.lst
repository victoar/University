     1                                  
     2                                  bits 32 ;assembling for the 32 bits architecture
     3                                  ; the start label will be the entry point in the program
     4                                  global  start 
     5                                  
     6                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     7                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  segment  data use32 class=data ; the data segment where the variables are declared 
    10                                      
    11 00000000 30                          a db 30h;
    12 00000001 2000                        b dw 20h;
    13 00000003 15000000                    c dd 15h
    14 00000007 4000000000000000            d dq 40h
    15                                      
    16                                  segment  code use32 class=code ; code segment
    17                                  start: 
    18                                  
    19                                      ; (a+b+d) - (a-c+d) + (b-c)
    20                                      
    21                                      ; (a+b+d)
    22 00000000 B800000000                  mov EAX, 0;
    23 00000005 BA00000000                  mov EDX, 0;
    24 0000000A A0[00000000]                mov AL, [a];
    25 0000000F 660305[01000000]            add AX, [b];
    26 00000016 0305[07000000]              add EAX, dword [d];
    27 0000001C 1315[0B000000]              adc EDX, dword [d+4];    
    28                                   
    29                                      ; (a-c+d)
    30 00000022 BB00000000                  mov EBX, 0;
    31 00000027 B900000000                  mov ECX, 0;
    32 0000002C 8A1D[00000000]              mov BL, [a];
    33 00000032 B700                        mov BH, 0;
    34 00000034 662B1D[03000000]            sub BX, word [c];
    35 0000003B 662B0D[05000000]            sub CX, word [c+2];
    36 00000042 031D[07000000]              add EBX, dword [d]
    37 00000048 130D[0B000000]              adc ECX, dword [d+4]
    38                                      
    39                                      ; (a+b+d) - (a-c+d)
    40 0000004E 29D8                        sub EAX, EBX;
    41 00000050 29CA                        sub EDX, ECX;
    42                                      
    43                                      ; (b-c)
    44 00000052 668B1D[01000000]            mov BX, [b];
    45 00000059 66B90000                    mov CX, 0;
    46 0000005D 662B1D[03000000]            sub BX, word [c];
    47 00000064 662B0D[05000000]            sub CX, word [c+2];
    48                                      
    49                                      ; (a+b+d) - (a-c+d) + (b-c)
    50 0000006B 6601D8                      add AX, BX;
    51 0000006E 6601CA                      add DX, CX;
    52                                      
    53                                      
    54 00000071 6A00                         push dword 0 ;saves on stack the parameter of the function exit
    55 00000073 FF15[00000000]               call [exit] ;function exit is called in order to end the execution ofthe program	
