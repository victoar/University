     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functionsi
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15                                  
    16 00000000 00<rept>                    string times 100 db 0
    17 00000064 257300                      format db "%s", 0
    18                                      
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24                                      
    25 00000000 66B8F8FF                        mov ax, 0xfff8
    26 00000004 66F7D8                          neg ax
    27 00000007 6650                            push ax
    28 00000009 6652                            push dx
    29                                          
    30 0000000B 665A                            pop dx
    31 0000000D 6658                            pop ax
    32                                          
    33 0000000F 68[00000000]                    push dword string
    34 00000014 68[64000000]                    push dword format
    35 00000019 FF15[00000000]                  call [scanf]
    36 0000001F 83C408                          add esp, 4*2
    37                                          
    38 00000022 68[00000000]                    push dword string
    39 00000027 68[64000000]                    push dword format
    40 0000002C FF15[00000000]                  call [printf]
    41 00000032 83C408                          add esp, 4*2
    42                                      
    43                                          ; exit(0)
    44 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
