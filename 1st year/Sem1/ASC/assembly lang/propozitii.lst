     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fgets, printf, fopen               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fgets msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16                                  
    17 00000000 70726F706F7A697469-         file_name db "propozitii.txt", 0
    17 00000009 692E74787400       
    18 0000000F 7200                        access_mode db "r", 0
    19 00000011 00<rept>                    sentence times 100 db 0
    20 00000075 257300                      format db "%s", 0
    21                                      
    22 00000078 FFFFFFFF                    file_descriptor dd -1
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28                                      
    29 00000000 68[0F000000]                    push dword access_mode
    30 00000005 68[00000000]                    push dword file_name
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83C408                          add esp, 4*2
    33                                          
    34 00000013 A3[78000000]                    mov [file_descriptor], eax
    35 00000018 83F800                          cmp eax, 0
    36 0000001B 7428                            je finish
    37                                          
    38 0000001D 68[11000000]                    push dword sentence
    39 00000022 68[75000000]                    push dword format
    40 00000027 FF35[78000000]                  push dword [file_descriptor]
    41 0000002D FF15[00000000]                  call [fgets]
    42 00000033 83C40C                          add esp, 4*3
    43                                          
    44 00000036 BE[11000000]                    mov esi, sentence
    45                                          
    46 0000003B 56                              push dword esi
    47 0000003C FF15[00000000]                  call [printf]
    48 00000042 83C404                          add esp, 4
    49                                          
    50                                          finish:
    51                                      
    52                                          ; exit(0)
    53 00000045 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 00000047 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
