     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, gets, printf, fopen, fread               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import gets msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 00<rept>                    sentence times 100 db 0
    18                                      
    19 00000064 6369746972652E7478-         file_name db "citire.txt", 0
    19 0000006D 7400               
    20 0000006F 7200                        access_mode db "r", 0
    21 00000071 257300                      format db "%s", 0
    22                                      
    23 00000074 FFFFFFFF                    file_descriptor dd -1
    24                                      
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; ...
    29                                      
    30 00000000 68[6F000000]                    push dword access_mode
    31 00000005 68[64000000]                    push dword file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4*2
    34                                          
    35 00000013 A3[74000000]                    mov [file_descriptor], eax
    36 00000018 83F800                          cmp eax, 0
    37 0000001B 7428                            je finish
    38                                          
    39 0000001D FF35[74000000]                  push dword[file_descriptor]
    40 00000023 6A64                            push 100
    41 00000025 6A01                            push 1
    42 00000027 68[00000000]                    push sentence
    43 0000002C FF15[00000000]                  call [fread]
    44                                          
    45 00000032 68[00000000]                    push dword sentence
    46 00000037 68[71000000]                    push dword format
    47 0000003C FF15[00000000]                  call [printf]
    48 00000042 83C408                          add esp, 4*2
    49                                          
    50                                          finish:
    51                                      
    52                                          ; exit(0)
    53 00000045 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 00000047 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
