     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fclose, fscanf, printf, fopen               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fscanf msvcrt.dll                         ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 74657374312E747874-         file_name db "test1.txt", 0
    18 00000009 00                 
    19 0000000A 7200                        access_mode db "r", 0
    20                                      
    21 0000000C 00000000                    n dd 0
    22 00000010 02000000                    two dd 2
    23 00000014 FFFFFFFF                    file_descrpitor dd -1
    24 00000018 25780000                    format dd "%x"
    25 0000001C 25782000                    format1 dd "%x "
    26 00000020 200000000D0000000A-         format2 dd " ", 13, 10, 0
    26 00000029 00000000000000     
    27                                      
    28                                  
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...
    33                                      
    34 00000000 68[0A000000]                    push dword access_mode
    35 00000005 68[00000000]                    push dword file_name
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 4*2
    38                                          
    39 00000013 A3[14000000]                    mov [file_descrpitor], eax
    40 00000018 83F800                          cmp eax, 0
    41 0000001B 0F849A000000                    je finish
    42                                          
    43                                          read:
    44                                          
    45 00000021 68[0C000000]                        push dword n
    46 00000026 68[18000000]                        push dword format
    47 0000002B FF35[14000000]                      push dword [file_descrpitor]
    48 00000031 FF15[00000000]                      call [fscanf]
    49 00000037 83C40C                              add esp, 4*3
    50                                              
    51 0000003A 83F800                              cmp eax, 0
    52 0000003D 7C6D                                jl stop
    53                                              
    54 0000003F A1[0C000000]                        mov eax, [n]
    55 00000044 BA00000000                          mov edx, 0
    56 00000049 F735[10000000]                      div dword [two]
    57 0000004F 83FA00                              cmp edx, 0
    58 00000052 7453                                je not_good
    59 00000054 FF35[0C000000]                          push dword [n]
    60 0000005A 68[1C000000]                            push dword format1
    61 0000005F FF15[00000000]                          call[printf]
    62 00000065 83C408                                  add esp, 4*2
    63                                                  
    64 00000068 B900000000                              mov ecx, 0
    65 0000006D A1[0C000000]                            mov eax, [n]
    66                                                  binary_count:
    67 00000072 83F800                                    cmp eax, 0
    68 00000075 7413                                      je stop_couting
    69 00000077 BA00000000                                mov edx, 0
    70 0000007C F735[10000000]                            div dword [two]
    71 00000082 83FA00                                    cmp edx, 0
    72 00000085 7401                                      je is_zero
    73 00000087 41                                          inc ecx
    74                                                    is_zero:
    75 00000088 EBE8                                    jmp binary_count
    76                                                  
    77                                                  stop_couting:
    78 0000008A 51                                      push dword ecx
    79 0000008B 68[1C000000]                            push dword format1
    80 00000090 FF15[00000000]                          call [printf]
    81 00000096 83C408                                  add esp, 4*2
    82                                                  
    83 00000099 68[20000000]                            push dword format2
    84 0000009E FF15[00000000]                          call [printf]
    85 000000A4 83C404                                  add esp, 4
    86                                                  
    87                                              not_good:
    88                                              
    89                                              
    90 000000A7 E975FFFFFF                      jmp read
    91                                          
    92                                          stop:
    93                                          
    94 000000AC FF35[14000000]                  push dword [file_descrpitor]
    95 000000B2 FF15[00000000]                  call [fclose]
    96 000000B8 83C404                          add esp,4
    97                                          
    98                                          finish:
    99                                      
   100                                      
   101                                          ; exit(0)
   102 000000BB 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   103 000000BD FF15[00000000]                  call    [exit]       ; call exit to terminate the program
